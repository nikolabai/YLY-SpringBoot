<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yly.mapper.SysRoleMapper">
  <resultMap id="BaseResultMap" type="com.yly.domain.SysRole">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="deleted" jdbcType="BIT" property="deleted" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, create_time, deleted, description, name, code, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_role
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sys_role
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.yly.domain.SysRole">
    insert into sys_role (id, create_time, deleted, 
      description, name, code, 
      update_time)
    values (#{id,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{deleted,jdbcType=BIT}, 
      #{description,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.yly.domain.SysRole">
    insert into sys_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=BIT},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yly.domain.SysRole">
    update sys_role
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=BIT},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yly.domain.SysRole">
    update sys_role
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=BIT},
      description = #{description,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  
  <select id="queryRolesByUserId" resultType="java.util.Set">
		select
		<include refid="Base_Column_List" />
		from rbac_role rr
		left join rbac_staff_role rsr on rsr.role_id = rr.id
		left join rbac_staff rs on rs.id = rsr.staff_id
		where rs.id = #{staffId}
	</select>
	
	<select id="queryRoleCountByConditions" resultType="java.lang.Long">
		select count(r.id) from rbac_role r where true
		<if test="map != null">
			<if test="map.id != null">
				and r.id = #{map.id}
			</if>
			<if test="map.name != null">
				and r.name = #{map.name}
			</if>
			<if test="map.code != null">
				and r.code = #{map.code}
			</if>
			<if test="map.createTimeStart != null">
				and r.create_time >= #{map.createTimeStart}
			</if>
			<if test="map.createTimeEnd != null">
				and #{map.createTimeEnd} >= r.create_time
			</if>
		</if>
	</select>
	
	<select id="queryRoleByConditions" resultMap="roleMap">
		select 
		<include refid="Base_Column_List"></include>
		from rbac_role r where true
		<if test="map != null">
			<if test="map.id != null">
				and r.id = #{map.id}
			</if>
			<if test="map.name != null">
				and r.name = #{map.name}
			</if>
			<if test="map.code != null">
				and r.code = #{map.code}
			</if>
			<if test="map.createTimeStart != null">
				and r.create_time >= #{map.createTimeStart}
			</if>
			<if test="map.createTimeEnd != null">
				and #{map.createTimeEnd} >= r.create_time
			</if>
		</if>
		<if test="easyVo != null">
			<if test="easyVo.sort != null">
				order by ${easyVo.sort}
			</if>
			<if test="easyVo.order != null">
				${easyVo.order}
			</if>
			limit ${(easyVo.page - 1) * easyVo.rows},#{easyVo.rows}
		</if>
	</select>
</mapper>